# sw9 = Sunway ExaScale Supercomputer

SHELL = /bin/sh

# ---------------------------------------------------------------------
# compiler/linker settings
# specify flags and libraries needed for your compiler
CC =		mpicxx
CCFLAGS =	-g -O3 -std=c++11 -msimd -mieee -D__sw_256bit_simd__ -D__sw_rma__ -DLAMMPS_MEMALIGN=256 -DLAMMPS_BIGBIG
CCFLAGS_SLAVE =	-g -O3 -std=c++17 -msimd -funroll-loops -mfma -ffast-math -mieee -D__sw_512bit_simd__ -D__sw_rma__ -fno-tree-loop-distribute-patterns -DLAMMPS_BIGBIG
SHFLAGS =
DEPFLAGS =	-M

LINK =		python3 ../xlink.py mpicxx
LINKFLAGS =	-g
LIB =    -L/usr/sw/lib   -L/usr/sw/mpi/mpi_20210609_SEA/lib/multi_static    -lm_slave -lswperf ../libqthread.a ../libgptl.a   -Wl,--wrap,malloc,--wrap,calloc,--wrap,realloc,--wrap,free
SIZE =		size

ARCHIVE =	ar
ARFLAGS =	-rc
SHLIBFLAGS =	
MPIINC_SLAVE:=$(subst /bin/mpicc,/include,$(shell which mpicc))
# ---------------------------------------------------------------------
# LAMMPS-specific settings, all OPTIONAL
# specify settings for LAMMPS features you will use
# if you change any -D setting, do full re-compile after "make clean"

# LAMMPS ifdef settings
# see possible settings in Section 3.5 of the manual

LMP_INC =	-DLAMMPS_GZIP  # -DLAMMPS_CXX98

# MPI library
# see discussion in Section 3.4 of the manual
# MPI wrapper compiler/linker can provide this info
# can point to dummy MPI library in src/STUBS as in Makefile.serial
# use -D MPICH and OMPI settings in INC to avoid C++ lib conflicts
# INC = path for mpi.h, MPI compiler settings
# PATH = path for MPI library
# LIB = name of MPI library

MPI_INC =   -I/usr/sw/mpi/mpi_20210609_SEA/include    -DMPICH_SKIP_MPICXX -DOMPI_SKIP_MPICXX=1
MPI_PATH =
MPI_LIB =

# FFT library
# see discussion in Section 3.5.2 of manual
# can be left blank to use provided KISS FFT library
# INC = -DFFT setting, e.g. -DFFT_FFTW, FFT compiler settings
# PATH = path for FFT library
# LIB = name of FFT library

FFT_INC =
FFT_PATH =
FFT_LIB =

# JPEG and/or PNG library
# see discussion in Section 3.5.4 of manual
# only needed if -DLAMMPS_JPEG or -DLAMMPS_PNG listed with LMP_INC
# INC = path(s) for jpeglib.h and/or png.h
# PATH = path(s) for JPEG library and/or PNG library
# LIB = name(s) of JPEG library and/or PNG library

JPG_INC =
JPG_PATH =
JPG_LIB =

# library for loading shared objects (defaults to -ldl, should be empty on Windows)
# uncomment to change the default

# override DYN_LIB =

# ---------------------------------------------------------------------
# build rules and dependencies
# do not edit this section

include Makefile.package.settings
include Makefile.package

EXTRA_INC = $(LMP_INC) $(PKG_INC) $(MPI_INC) $(FFT_INC) $(JPG_INC) $(PKG_SYSINC)
EXTRA_PATH = $(PKG_PATH) $(MPI_PATH) $(FFT_PATH) $(JPG_PATH) $(PKG_SYSPATH)
EXTRA_LIB = $(PKG_LIB) $(MPI_LIB) $(FFT_LIB) $(JPG_LIB) $(PKG_SYSLIB) $(DYN_LIB)
EXTRA_CPP_DEPENDS = $(PKG_CPP_DEPENDS)
EXTRA_LINK_DEPENDS = $(PKG_LINK_DEPENDS)

# Path to src files

vpath %.cpp ..
vpath %.h ..

# Link target

$(EXE): main.o $(EXTRA_LINK_DEPENDS) $(OBJ)
	$(LINK) $(LINKFLAGS) main.o $(OBJ) $(EXTRA_PATH) $(EXTRA_LIB) $(LIB) -static -o $@
	sw_64sw6a-sunway-linux-gnu-strip $(EXE) -o $(EXE)_strip
	$(SIZE) $@

# Library targets

$(ARLIB): $(OBJ) $(EXTRA_LINK_DEPENDS)
	@rm -f ../$(ARLIB)
	$(ARCHIVE) $(ARFLAGS) ../$(ARLIB) $(OBJ)
	@rm -f $(ARLIB)
	@ln -s ../$(ARLIB) $(ARLIB)

$(SHLIB): $(OBJ) $(EXTRA_LINK_DEPENDS)
	$(CC) $(CCFLAGS) $(SHFLAGS) $(SHLIBFLAGS) $(EXTRA_PATH) -o ../$(SHLIB) \
		$(OBJ) $(EXTRA_LIB) $(LIB)
	@rm -f $(SHLIB)
	@ln -s ../$(SHLIB) $(SHLIB)

# Compilation rules

%_sunway.o:%_sunway.cpp
	mpicxx -mhost $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $< -o $@.host.o
	sw9gcc -mslave $(CCFLAGS_SLAVE) $(SHFLAGS) $(EXTRA_INC) -I$(MPIINC_SLAVE) -c $< -o $@.slave.o
	/usr/sw/swgcc/swgcc710-tools-SEA-1307/usr_sw/bin/swld -r $@.host.o $@.slave.o -o $@
%.o:%.cpp
	$(CC) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $< -o $@
# Individual dependencies

depend : fastdep.exe $(SRC)
	@./fastdep.exe $(EXTRA_INC) -- $^ > .depend || exit 1

fastdep.exe: ../DEPEND/fastdep.c
	cc -O -o $@ $<

sinclude .depend
